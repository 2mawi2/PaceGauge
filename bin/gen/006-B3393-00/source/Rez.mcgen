import Toybox.Lang;
using Toybox.WatchUi;
using Toybox.WatchUi as Ui;
using Toybox.Graphics;
using Toybox.Graphics as Gfx;

module Rez {
    module Drawables {
        (:initialized) var LauncherIcon as Symbol;
    } // Drawables

    module Fonts {
    } // Fonts

    module JsonData {
    } // JsonData

    module Layouts {
        function MainLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_var_dc_getHeight = dc.getHeight();

            var rez_cmp_local_var_dc_getWidth = dc.getWidth();

            var rez_cmp_local_custom_drawable_91544557317658617041 = new Background();

            var rez_cmp_local_text_value = new WatchUi.Text({:identifier=>"value", :color=>Graphics.COLOR_WHITE, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>((rez_cmp_local_var_dc_getHeight - dc.getFontHeight(Graphics.FONT_SYSTEM_NUMBER_MEDIUM)) * 0.5), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>Graphics.FONT_SYSTEM_NUMBER_MEDIUM});

            var rez_cmp_local_text_error = new WatchUi.Text({:identifier=>"error", :color=>Graphics.COLOR_WHITE, :locX=>(rez_cmp_local_var_dc_getWidth * 0.5), :locY=>((rez_cmp_local_var_dc_getHeight - dc.getFontHeight(Graphics.FONT_SMALL)) * 0.5), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>Graphics.FONT_SMALL});

            return [rez_cmp_local_custom_drawable_91544557317658617041, rez_cmp_local_text_value, rez_cmp_local_text_error] as Array<WatchUi.Drawable>;
        }

        function TopLeftLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_custom_drawable_98203583910228436669 = new Background();

            var rez_cmp_local_text_value = new WatchUi.Text({:identifier=>"value", :color=>Graphics.COLOR_WHITE, :locX=>95, :locY=>42, :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>Graphics.FONT_SYSTEM_NUMBER_MEDIUM});

            return [rez_cmp_local_custom_drawable_98203583910228436669, rez_cmp_local_text_value] as Array<WatchUi.Drawable>;
        }

        function TopRightLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_custom_drawable_84201534534252046311 = new Background();

            var rez_cmp_local_text_value = new WatchUi.Text({:identifier=>"value", :color=>Graphics.COLOR_WHITE, :locX=>14, :locY=>42, :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>Graphics.FONT_SYSTEM_NUMBER_MEDIUM});

            return [rez_cmp_local_custom_drawable_84201534534252046311, rez_cmp_local_text_value] as Array<WatchUi.Drawable>;
        }

        function BottomLeftLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_custom_drawable_12978258945959132611 = new Background();

            var rez_cmp_local_text_value = new WatchUi.Text({:identifier=>"value", :color=>Graphics.COLOR_WHITE, :locX=>95, :locY=>27, :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>Graphics.FONT_SYSTEM_NUMBER_MEDIUM});

            return [rez_cmp_local_custom_drawable_12978258945959132611, rez_cmp_local_text_value] as Array<WatchUi.Drawable>;
        }

        function BottomRightLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_custom_drawable_13488269691632152017 = new Background();

            var rez_cmp_local_text_value = new WatchUi.Text({:identifier=>"value", :color=>Graphics.COLOR_WHITE, :locX=>14, :locY=>27, :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>Graphics.FONT_SYSTEM_NUMBER_MEDIUM});

            return [rez_cmp_local_custom_drawable_13488269691632152017, rez_cmp_local_text_value] as Array<WatchUi.Drawable>;
        }
    } // Layouts

    module Menus {
    } // Menus

    module Strings {
        (:initialized) var IsMetricSystem as Symbol;
        (:initialized) var ThresholdPaceMinutes as Symbol;
        (:initialized) var ThresholdPacePrompt as Symbol;
        (:initialized) var NumberError as Symbol;
        (:initialized) var ThresholdPaceSeconds as Symbol;
        (:initialized) var AppName as Symbol;
    } // Strings
} // Rez
